parameters:
  environment:  ''
  targetVersion:  ''
jobs:
  - deployment:  'deploy_aks_${{ parameters.environment }}'
    displayName: 'Deploy AKS in ${{ parameters.environment }}'
    pool:
      vmImage: 'ubuntu-latest'
    environment:  ${{ parameters.environment }}
    variables:
      statefulRg:  'shared-state-${{ parameters.environment }}'
      statelessRgPrefix:  'shared-stateless'
      clusterPrefix:  'vpl-cluster'
      ipPrefix:  'vpl-main-ip'
      dnsPrefix:  'vpl-aks'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            displayName:  Download scripts
            artifact: content
          # Azure CLI:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli
          - task: AzureCLI@2
            displayName:  Fetch colour
            inputs:
              azureSubscription: shared-infra
              scriptType:  'bash'
              scriptLocation: 'scriptPath'
              scriptPath:  $(Pipeline.Workspace)/content/fetch-colour.sh
              arguments:  $(statefulRg)
          # Azure CLI:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli
          - task: AzureCLI@2
            displayName:  Fetch Log Analytics ID
            inputs:
              azureSubscription: shared-infra
              scriptType:  'bash'
              scriptLocation: 'scriptPath'
              scriptPath:  $(Pipeline.Workspace)/content/fetch-log-analytics-id.sh
              arguments:  $(statefulRg)
          # ARM Deployment:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment
          - task: AzureResourceGroupDeployment@2
            displayName:  Deploy AKS
            inputs:
              azureSubscription: shared-infra
              resourceGroupName: '$(statelessRgPrefix)-$(colour)-${{ parameters.environment }}'
              location: eastus
              templateLocation: 'Linked artifact'
              csmFile: $(Pipeline.Workspace)/content/shared-infra-simple.json
              #csmParametersFile: #Not using it here
              deploymentMode: 'Incremental'
              overrideParameters: "-dnsPrefix $(dnsPrefix)-$(colour)-${{ parameters.environment }} -logAnalyticsId $(laid) -clusterName $(clusterPrefix)-$(colour)-${{ parameters.environment }}"
          # Azure CLI:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli
          - task: AzureCLI@2
            displayName:  Fetch Node Resource Group
            inputs:
              azureSubscription: shared-infra
              scriptType:  'bash'
              scriptLocation: 'scriptPath'
              scriptPath:  $(Pipeline.Workspace)/content/determine-node-group-simple.sh
              arguments:  "$(statelessRgPrefix)-$(colour)-${{ parameters.environment }} $(clusterPrefix)-$(colour)-${{ parameters.environment }}"
          # ARM Deployment:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment
          - task: AzureResourceGroupDeployment@2
            displayName:  Deploy Main IP
            inputs:
              azureSubscription: shared-infra
              resourceGroupName: $(nrg)
              location: eastus
              templateLocation: 'Linked artifact'
              csmFile: $(Pipeline.Workspace)/content/main-ip.json
              #csmParametersFile: #Not using it here
              deploymentMode: 'Incremental'
              overrideParameters: "-mainIp $(ipPrefix)-$(colour)-${{ parameters.environment }}"
          # Azure CLI:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-cli
          - task: AzureCLI@2
            displayName:  Determine IP
            inputs:
              azureSubscription: shared-infra
              scriptType:  'bash'
              scriptLocation: 'scriptPath'
              scriptPath:  $(Pipeline.Workspace)/content/determine-ip.sh
              arguments:  "$(nrg) $(ipPrefix)-$(colour)-${{ parameters.environment }}"
          # Helm tool installer:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/helm-installer
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'
          # Helm deploy:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/helm-deploy
          - task: HelmDeploy@0
            displayName: repo add
            inputs:
              azureSubscriptionEndpoint: shared-infra
              azureResourceGroup: '$(statelessRgPrefix)-$(colour)-${{ parameters.environment }}'
              kubernetesCluster: $(clusterPrefix)-$(colour)-${{ parameters.environment }}
              command: repo
              arguments: add stable https://kubernetes-charts.storage.googleapis.com/
          # Helm deploy:  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/helm-deploy
          - task: HelmDeploy@0
            displayName: NGinx
            inputs:
              azureSubscriptionEndpoint: shared-infra
              azureResourceGroup: '$(statelessRgPrefix)-$(colour)-${{ parameters.environment }}'
              kubernetesCluster: $(clusterPrefix)-$(colour)-${{ parameters.environment }}
              command: upgrade
              install:  true
              chartName:  stable/nginx-ingress
              releaseName:  main-ingress
              arguments: --set rbac.create=false --set controller.replicaCount=2 --set controller.service.loadBalancerIP=$(ip) --wait
              timeoutInMinutes: 10